// src/pages/Profile.js
import React, { useContext, useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import AuthContext from '../context/AuthContext';
import axios from 'axios';
import config from '../config';

const Profile = () => {
  const { user } = useContext(AuthContext);
  const [appliedJobs, setAppliedJobs] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchAppliedJobs = async () => {
      if (user && user.role === 'worker') {
        try {
          const token = localStorage.getItem('token');
          const config = {
            headers: {
              'Authorization': `Bearer ${token}`
            }
          };
          
          const res = await axios.get(`${config.API_BASE_URL}/api/jobs/my/applied`, config);
          setAppliedJobs(res.data.jobs);
        } catch (err) {
          console.error('L·ªói khi t·∫£i danh s√°ch vi·ªác ƒë√£ ·ª©ng tuy·ªÉn');
        } finally {
          setLoading(false);
        }
      } else {
        setLoading(false);
      }
    };

    if (user && user.role === 'worker') {
      fetchAppliedJobs();
    } else {
      setLoading(false);
    }
  }, [user]);

  if (!user) {
    return (
      <div className="profile-page">
        <div className="not-logged-in">
          <h2>Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ xem profile</h2>
          <Link to="/login" className="btn btn-primary">ƒêƒÉng nh·∫≠p</Link>
        </div>
      </div>
    );
  }

  const getStatusText = (status) => {
    switch (status) {
      case 'pending': return 'Ch·ªù x·ª≠ l√Ω';
      case 'accepted': return 'ƒê√£ ch·∫•p nh·∫≠n';
      case 'rejected': return 'ƒê√£ t·ª´ ch·ªëi';
      default: return status;
    }
  };

  const getStatusClass = (status) => {
    switch (status) {
      case 'pending': return 'status-pending';
      case 'accepted': return 'status-accepted';
      case 'rejected': return 'status-rejected';
      default: return '';
    }
  };

  return (
    <div className="profile-page">
      <div className="profile-header">
        <h1>Th√¥ng tin c√° nh√¢n</h1>
      </div>

      <div className="profile-content">
        <div className="profile-info">
          <div className="info-item">
            <strong>H·ªç t√™n:</strong> {user.name}
          </div>
          <div className="info-item">
            <strong>Email:</strong> {user.email}
          </div>
          <div className="info-item">
            <strong>Vai tr√≤:</strong> 
            {user.role === 'worker' ? ' Ng∆∞·ªùi t√¨m vi·ªác' : ' Nh√† tuy·ªÉn d·ª•ng'}
          </div>
        </div>

        {user.role === 'worker' && (
          <div className="profile-section">
            <h3>Vi·ªác l√†m ƒë√£ ·ª©ng tuy·ªÉn</h3>
            {loading ? (
              <p>ƒêang t·∫£i...</p>
            ) : appliedJobs.length === 0 ? (
              <p>B·∫°n ch∆∞a ·ª©ng tuy·ªÉn c√¥ng vi·ªác n√†o.</p>
            ) : (
              <div className="applied-jobs-list">
                {appliedJobs.map(job => (
                  <div key={job._id} className="applied-job-card">
                    <h4>
                      <Link to={`/jobs/${job._id}`}>{job.title}</Link>
                    </h4>
                    <p className="job-employer">Nh√† tuy·ªÉn d·ª•ng: {job.employer.name}</p>
                    <p className="job-location">üìç {job.location}</p>
                    <p className="job-salary">
                      üí∞ {job.salary.toLocaleString()} VNƒê/{job.salaryType === 'hourly' ? 'gi·ªù' : job.salaryType === 'daily' ? 'ng√†y' : 'c·ªë ƒë·ªãnh'}
                    </p>
                    <p className={`job-status ${getStatusClass(job.status)}`}>
                      Tr·∫°ng th√°i: {getStatusText(job.status)}
                    </p>
                    <p className="applied-date">
                      ·ª®ng tuy·ªÉn ng√†y: {new Date(job.appliedAt).toLocaleDateString()}
                    </p>
                  </div>
                ))}
              </div>
            )}
          </div>
        )}

        {user.role === 'employer' && (
          <div className="profile-section">
            <h3>Qu·∫£n l√Ω vi·ªác l√†m</h3>
            <div className="employer-actions">
              <Link to="/create-job" className="btn btn-primary">
                ƒêƒÉng vi·ªác m·ªõi
              </Link>
              <Link to="/my-jobs" className="btn btn-secondary">
                Vi·ªác l√†m c·ªßa t√¥i
              </Link>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default Profile;